name: "Terraform"

on:  [workflow_dispatch]
jobs:
  terraform:
    name: Provision Prod
    runs-on: ubuntu-latest
    needs: functionalTestsStaging
    environment:
      name: deploy.prod
      url: https://abel-node-gh-accelerator.azurewebsites.net
    permissions:
      pull-requests: write
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          # terraform_version: 1.4.2
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Checking Environment Values
        run: |
          echo GITHUB_USER - ${GITHUB_USER}
          echo GITHUB_ACTION_REPOSITORY - ${GITHUB_ACTION_REPOSITORY}
          echo GITHUB_ACTION - ${GITHUB_ACTION}
          echo GITHUB_ACTION_PATH - ${GITHUB_ACTION_PATH}
          echo GITHUB_ACTIONS - ${GITHUB_ACTIONS}
          echo GITHUB_ACTOR - ${GITHUB_ACTOR}
          echo GITHUB_ACTOR_ID - ${GITHUB_ACTOR_ID}
          echo GITHUB_API_URL - ${GITHUB_API_URL}
          echo GITHUB_BASE_REF - ${GITHUB_BASE_REF}
          echo GITHUB_ENV - ${GITHUB_ENV}
          echo GITHUB_EVENT_NAME - ${GITHUB_EVENT_NAME}
          echo GITHUB_EVENT_PATH - ${GITHUB_EVENT_PATH}
          echo GITHUB_GRAPHQL_URL - ${GITHUB_GRAPHQL_URL}
          echo GITHUB_HEAD_REF - ${GITHUB_HEAD_REF}
          echo GITHUB_JOB - ${GITHUB_JOB}
          echo GITHUB_PATH - ${GITHUB_PATH}
          echo GITHUB_REF - ${GITHUB_REF}
          echo GITHUB_REF_NAME - ${GITHUB_REF_NAME}
          echo GITHUB_REF_PROTECTED - ${GITHUB_REF_PROTECTED}
          echo GITHUB_REF_TYPE - ${GITHUB_REF_TYPE}
          echo GITHUB_REPOSITORY - ${GITHUB_REPOSITORY}
          echo GITHUB_REPOSITORY_ID - ${GITHUB_REPOSITORY_ID}
          echo GITHUB_REPOSITORY_OWNER - ${GITHUB_REPOSITORY_OWNER}
          echo GITHUB_REPOSITORY_OWNER_ID - ${GITHUB_REPOSITORY_OWNER_ID}
          echo GITHUB_RETENTION_DAYS - ${GITHUB_RETENTION_DAYS}
          echo GITHUB_RUN_ATTEMPT - ${GITHUB_RUN_ATTEMPT}
          echo GITHUB_RUN_ID - ${GITHUB_RUN_ID}
          echo GITHUB_RUN_NUMBER - ${GITHUB_RUN_NUMBER}
          echo GITHUB_SERVER_URL - ${GITHUB_SERVER_URL}
          echo GITHUB_SHA - ${GITHUB_SHA}
          echo GITHUB_STEP_SUMMARY - ${GITHUB_STEP_SUMMARY}
          echo GITHUB_WORKFLOW - ${GITHUB_WORKFLOW}
          echo GITHUB_WORKFLOW_REF - ${GITHUB_WORKFLOW_REF}
          echo GITHUB_WORKFLOW_SHA - ${GITHUB_WORKFLOW_SHA}
          echo GITHUB_WORKSPACE - ${GITHUB_WORKSPACE}
          echo RUNNER_ARCH - ${RUNNER_ARCH}
          echo RUNNER_DEBUG - ${RUNNER_DEBUG}
          echo RUNNER_NAME - ${RUNNER_NAME}
          echo RUNNER_OS - ${RUNNER_OS}
          echo RUNNER_TEMP - ${RUNNER_TEMP}
          echo RUNNER_TOOL_CACHE - ${RUNNER_TOOL_CACHE}

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: ${{ steps.plan.outputs.stdout }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
