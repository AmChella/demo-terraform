# .github/workflows/helm-cypress.yml

name: Helm + Cypress CI

on:
  push:
    branches: [main]

jobs:
  e2e:
    name: E2E Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract Short SHA and Label
        id: version
        uses: learnship/version-action@132cb6f241968b60a01dbdc9233cfd0a64cad652

      - name: Install Kind
        run: |
          curl -Lo kind https://kind.sigs.k8s.io/dl/v0.22.0/kind-linux-amd64
          chmod +x kind
          sudo mv kind /usr/local/bin/kind

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.33.1/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl

      - name: Install Helm
        run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Create Kind cluster with port mapping for Ingress
        run: |
          cat <<EOF | kind create cluster --config=-
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          nodes:
            - role: control-plane
              extraPortMappings:
                - containerPort: 80
                  hostPort: 80
          EOF

      - name: Deploy app with Helm (uses pre-configured ingress)
        run: |
          mkdir -p /tmp/Data
          helm install demo demo/app \
          --namespace ci-local --create-namespace \
          --set variables.DISABLE_LOGIN_REDIRECT=true \
          --set dependencies.enabled=true \
          --set production.enabled=false \
          --set deployment.web_replicas=1 \
          --set deployment.cpu_limit.cron=500m \
          --set deployment.cpu_request.cron=500m \
          --set deployment.cpu_limit.web=500m \
          --set deployment.cpu_request.web=500m \
          --set pv.host.path=/tmp/Data \
          --set deployment.image=2chella/tms:sha-79db0858 \
          --set deployment.worker_image=2chella/tms:sha-79db0858 \
          --set localStorageClass.name=standard

          kubectl get po --all-namespaces
          kubectl wait --for=condition=ready pod --all --namespace=ci-local --timeout=120s

      - name: Port forward app
        run: |
          kubectl port-forward svc/demo-service 80:80 -n ci-local &
          sleep 5

      - name: Add custom domain to /etc/hosts
        run: |
          echo "127.0.0.1 tms.learnship.local" | sudo tee -a /etc/hosts

      - name: Set up Cypress environment
        working-directory: test/tmsRegression
        run: |
          kubectl get po -n ci-local
          curl http://tms.learnship.local