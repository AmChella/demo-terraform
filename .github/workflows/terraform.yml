name: "Terraform"

on:  
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: true
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true
  pull_request_review:
    types: [submitted]
  push:
    tags:
      - "*"
env: 
  version: $GITHUB_REF_NAME
jobs:
  Build:
    #if: github.event.review.state == 'approved'
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Compile
        run: |
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=$SHORT_SHA" >> $GITHUB_OUTPUT
          ls -l
          V=$(echo $GITHUB_REF_NAME | sed 's/\//_/')
          echo $V
      - run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts
          echo ${{ github.ref_type }}

      - name: Moving all files to artifacts
        run: |
          rsync -av --exclude=.git . $GITHUB_WORKSPACE/artifacts
      
      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: artifacts
          if-no-files-found: error
  
  Audit:
    if: github.ref_type == 'tag'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Dev
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: my-artifact
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  Deploy2Dev:
    name: Deploy to Dev Environment
    if: github.event.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Dev
      url: 'https://dev.happycodee.today'

    steps:
      - name: AWS Login
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # - uses: actions/download-artifact@v3
      #   with:
      #     name: my-artifact
    
      - name: Display structure of downloaded files
        run: |
          ls -R
      - name: Deploy
        run: |
          echo "Log level: $LEVEL"
          echo "Tags: $TAGS"
          echo "Environment: $ENVIRONMENT"
        env:
          LEVEL: ${{ inputs.logLevel }}
          TAGS: ${{ inputs.tags }}
          ENVIRONMENT: ${{ inputs.environment }}

  Deploy2Stage:
    name: Deploy to Stage
    if: github.event.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Stage
      url: 'https://stage.happycode.tech'

    steps:
      - name: Configures AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # - uses: actions/download-artifact@v3
      #   with:
      #     name: my-artifact
    
      - name: Display structure of downloaded files
        run: |
          ls -R

      - name: Build Image
        run: |
          echo "Log level: $LEVEL"
          echo "Tags: $TAGS"
          echo "Environment: $ENVIRONMENT"
        env:
          LEVEL: ${{ inputs.logLevel }}
          TAGS: ${{ inputs.tags }}
          ENVIRONMENT: ${{ inputs.environment }}

  Deploy2Prod:
    name: Deploy to Prod
    needs: [Deploy2Stage]
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: 'https://happycode.com'

    steps:
      - name: Configures AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # - uses: actions/download-artifact@v3
      #   with:
      #     name: my-artifact
    
      - name: Display structure of downloaded files
        run: |
          ls -R
          echo $SHORT_SHA
      - name: Build Image
        run: |
          echo "Log level: $LEVEL"
          echo "Tags: $TAGS"
          echo "Environment: $ENVIRONMENT"
        env:
          LEVEL: ${{ inputs.logLevel }}
          TAGS: ${{ inputs.tags }}
          ENVIRONMENT: ${{ inputs.environment }}
