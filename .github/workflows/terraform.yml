# .github/workflows/helm-cypress.yml

name: Helm + Cypress CI

on:
  push:
    branches: [main]

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      containerCount: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate matrix from test files
        id: set-matrix
        run: |
          matrix="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            matrix="[1]"
          fi
          echo "containerCount=$containerCount" >> $GITHUB_OUTPUT

  e2e:
    name: E2E Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        container: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    environment: e2e
    env:
      IMAGE_NAME: gedevops/tms
    outputs:
      allowedTags: ${{ steps.get-tags.outputs.allowedTags }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          repository: learnship/tms

      - name: Start minikube
        uses: medyagh/setup-minikube@latest
        with:
          kubernetes-version: v1.24.9
      - name: Display available api versions
        run: kubectl api-versions
      - name: Enable minikube Ingress addon
        run: minikube addons enable ingress
      - name: Observe the Ingress Deployment rollout
        run: kubectl rollout status -w --timeout=10m deployment ingress-nginx-controller -n ingress-nginx

      - name: Deploy app with Helm (uses pre-configured ingress)
        run: |
          mkdir -p /tmp/Data
          helm install demo demo/app \
          --namespace ci-local --create-namespace \
          --set variables.DISABLE_LOGIN_REDIRECT=true \
          --set dependencies.enabled=true \
          --set production.enabled=false \
          --set deployment.web_replicas=1 \
          --set deployment.cpu_limit.cron=500m \
          --set deployment.cpu_request.cron=500m \
          --set deployment.cpu_limit.web=500m \
          --set deployment.cpu_request.web=500m \
          --set pv.host.path=/tmp/Data \
          --set deployment.image=2chella/tms:sha-79db0858 \
          --set deployment.worker_image=2chella/tms:sha-79db0858 \
          --set localStorageClass.name=standard

          kubectl get po --all-namespaces
          kubectl wait --for=condition=ready pod --all --namespace=ci-local --timeout=120s

      - name: Port forward app
        run: |
          kubectl port-forward svc/demo-service 80:80 -n ci-local &
          sleep 5

      - name: Add custom domain to /etc/hosts
        run: |
          echo "127.0.0.1 tms.learnship.local" | sudo tee -a /etc/hosts

      - name: Set up Cypress environment
        working-directory: test/tmsRegression
        run: |
          kubectl get po -n ci-local
          curl http://tms.learnship.local
